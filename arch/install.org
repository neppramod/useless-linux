#+Install Arch
This file contains installation instructions for Arch Linux (for my setup). To run a particular section, in emacs go to the end of the src block (end_src) and press Ctrl + x Ctrl + e

* Follow Arch Wiki Installation Guide
  [[https://wiki.archlinux.org/title/installation_guide][https://wiki.archlinux.org/title/installation_guide]]
* Partition
** Create Partition
   Use ~cfdisk~ command to create partitons. For virtualbox, you may want to create partitions for /boot (500M), swap (1.5G) and root (rest of partition). Use around 15G dynamic drive. For virtualbox use ~dos~ for label type in ~cfdisk~.
** Format
   To Format the drives use following commands (Assuming /dev/sda1 as /boot, /dev/sda2 as swap and /dev/sda3 as root).
*** [[https://wiki.archlinux.org/title/Swap#Swap_partition][Swap]]:
#+begin_src sh
  lsblk
  mkswap /dev/sda2
#+end_src
*** Format and mount /mnt/boot/efi and /mnt partitons
If you want to use efi format /dev/sda1 to vfat and mount to /mnt/boot/efi
#+begin_src sh
  mkfs.ext4 /dev/sda1
  # mkfs.vfat /dev/sda1 #for efi
  mkfs.ext4 /dev/sda3
#+end_src

** Mount partitions
#+begin_src sh
  swapon /dev/sda2
  mount /dev/sda3 /mnt
  #mkdir -P /mnt/boot/efi
  #mount /dev/sda1 /mnt/boot/efi
#+end_src

* Chroot
** Install essential packages
#+begin_src sh
  pacstrap /mnt base base-devel linux linux-firmware linux-headers networkmanager vim
#+end_src
** Prepare and chroot to /mnt
#+begin_src sh
  genfstab -U /mnt >> /mnt/etc/fstab
  cat /mnt/etc/fstab
  arch-chroot /mnt
  #mkdir efi
  #mount /dev/sda1 efi
#+end_src

* Initialize
  Set TimeZone (using Denver as example), sync clock, localization, hostname, initcpio
  - First, edit ~/etc/locale.gen~ and uncomment ~en_US.UTF-8 UTF-8~.
	
#+begin_src sh
  ln -sf /usr/share/zoneinfo/America/Denver /etc/localtime
  hwclock --systohc
  locale-gen
  echo LANG=en_US.UTF-8 > /etc/locale.conf
  echo archcomp > /etc/hostname
  mkinitcpio -P
  pacman -S grub efibootmgr

  # EFI
  # Execute the following command to install the GRUB EFI application grubx64.efi to /boot/efi/EFI/GRUB and install its modules to /boot/grub/x86_64-efi/

  grub-install --target=x86_64-efi --efi-directory=efi --bootloader-id=GRUB

  grub-mkconfig -o /boot/grub/grub.cfg
  passwd
#+end_src

Install os-prober for multiple Oses

Also add *GRUB_DISABLE_OS_PROBER=false* in */etc/default/grub*

* Install packages and create user
  Uncomment ~multilib~ in ~/etc/pacman.conf~
#+begin_src sh
  systemctl enable NetworkManager
  systemctl start NetworkManager
  pacman -Sy
  pacman -S sudo vim bash-completion
  useradd -m -g users -G wheel,storage,power -s /bin/bash someusername
  passwd someusername
  EDITOR=vim visudo
#+end_src

Uncomment ~%wheel ALL=(ALL) ALL~

* Install sound, desktop environment and other tools

#+begin_src sh
  pacman -S plasma-desktop sddm konsole dolphin xorg-xrandr pulseaudio kscreen kmix pavucontrol discover packagekit-qt5 flatpak fwupd gufw mpv libdvdcss git ttf-dejavu mlocate khotkeys mpv ncdu nomacs acpi ark bluedevil emacs gnu-free-fonts firefox gufw gzip hdparam jdk-openjdk kaccounts-providers kdeplasma-addons keepassxc khotkeys kinfocenter kmix lib32-amdvlk lib32-libva lib32-mesa libmad libva-mesa-driver lrzip mesa-vdpau man-pages mlocate noto-fonts-extra noto-fonts-emoji okular p7zip pacman-contrib plasma-nm plasma-pa powerdevil quodlibet samba spectacle steam ttf-fira-code ttf-fira-mono ttf-fira-sans ttf-droid ttf-dejavu ttf-bitstream-vera ttf-ubuntu-font-family unarchiver unrar vkd3d xf86-video-amdgpu libc++
  systemctl enable sddm
  updatedb
#+end_src

- To enable autologin you can add edit ~/usr/lib/sddm/sddm.conf.d/default.conf~ and add current user to ~User=~
- To set a resolution (if resolution is not set) to 1080p (inside user session)
#+begin_src sh
xrandr
xrandr -s 1920x1080
#+end_src

# /etc/X11/xorg.conf
#+begin_src sh
Section "ServerLayout"
    Identifier "layout"
    Screen 0 "nvidia"
    Inactive "intel"
EndSection

Section "Device"
    Identifier "nvidia"
    Driver "nvidia"
    BusID "PCI:1:0:0"
EndSection

Section "Screen"
    Identifier "nvidia"
    Device "nvidia"
    Option "AllowEmptyInitialConfiguration"
EndSection

Section "Device"
    Identifier "intel"
    Driver "modesetting"
EndSection

Section "Screen"
    Identifier "intel"
    Device "intel"
EndSection
#+end_src

*
